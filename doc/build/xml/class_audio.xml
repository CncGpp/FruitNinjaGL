<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_audio" kind="class" language="C++" prot="public">
    <compoundname>Audio</compoundname>
    <includes refid="_audio_8hpp" local="no">fn/core/audio/Audio.hpp</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_audio_1a3abea10e2ff20879c090bc579beea59e" prot="protected" static="yes" mutable="no">
        <type>ISoundEngine *</type>
        <definition>ISoundEngine * Audio::s_audio_engine</definition>
        <argsstring></argsstring>
        <name>s_audio_engine</name>
        <briefdescription>
<para>Puntatore all&apos;engine di irrKlang. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="60" column="21" bodyfile="fn/core/audio/Audio.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_audio_1a75d17eeb7a17d4e06dd2fb154d75d70d" prot="private" static="no" mutable="no">
        <type>ISoundSource *</type>
        <definition>ISoundSource* Audio::m_soundSource</definition>
        <argsstring></argsstring>
        <name>m_soundSource</name>
        <briefdescription>
<para>Puntatore alla sorgente audio di irrKlang relativa all&apos;audio caricato. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="64" column="14" bodyfile="fn/core/audio/Audio.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_audio_1aaa7dc59abf0f316e547c8e11cd248c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Audio::Audio</definition>
        <argsstring>(const fs::path &amp;audiopath)</argsstring>
        <name>Audio</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>audiopath</declname>
        </param>
        <briefdescription>
<para>Costruttore. </para>
        </briefdescription>
        <detaileddescription>
<para>Carica il file specificato e costruisce un oggetto <ref refid="class_audio" kindref="compound">Audio</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>audiopath</parametername>
</parameternamelist>
<parameterdescription>
<para>percorso al file audio da caricare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="31" column="1" bodyfile="fn/core/audio/Audio.cpp" bodystart="5" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_1ad08fe313df6976ffbfc28d8ced87e317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Audio::Audio</definition>
        <argsstring>(Audio const &amp;)=delete</argsstring>
        <name>Audio</name>
        <param>
          <type><ref refid="class_audio" kindref="compound">Audio</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>La copia di un oggetto <ref refid="class_audio" kindref="compound">Audio</ref> non è permessa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_1a2466cb9a711a4baafe8bbbcd1443d638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_audio" kindref="compound">Audio</ref> &amp;</type>
        <definition>Audio&amp; Audio::operator=</definition>
        <argsstring>(Audio const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_audio" kindref="compound">Audio</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>L&apos;assegnazione di un oggetto <ref refid="class_audio" kindref="compound">Audio</ref> non è permessa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="37" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_1ad0ed2dab77abc29e16bbf80204d5e9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Audio::play2D</definition>
        <argsstring>(float volume=1.0f, bool loop=false)</argsstring>
        <name>play2D</name>
        <param>
          <type>float</type>
          <declname>volume</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>loop</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Esegue l&apos;audio caricato in 2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume dell&apos;audio da eseguire [0, 100]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para>se<programlisting filename=".cpp"><codeline><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> l&apos;audio è eseguito in loop. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="45" column="6" bodyfile="fn/core/audio/Audio.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_audio_1af3ab2a8f4cb7340b2854c883f87e0a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Audio::play3D</definition>
        <argsstring>(glm::vec3 position=glm::vec3(), float volume=1.0f, bool loop=false)</argsstring>
        <name>play3D</name>
        <param>
          <type>glm::vec3</type>
          <declname>position</declname>
          <defval>glm::vec3()</defval>
        </param>
        <param>
          <type>float</type>
          <declname>volume</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>loop</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Esegue l&apos;audio caricato in 3D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>posizione della sorgente audio in coordinate word. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>Volume dell&apos;audio da eseguire [0, 100]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para>se<programlisting filename=".cpp"><codeline><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> l&apos;audio è eseguito in loop. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="54" column="6" bodyfile="fn/core/audio/Audio.cpp" bodystart="23" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_audio_1abedaa8736b238622c9ba1e41407926d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Audio::stopAllSounds</definition>
        <argsstring>()</argsstring>
        <name>stopAllSounds</name>
        <briefdescription>
<para>Termina l&apos;esecuzione di tutti i suoni. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="57" column="13" bodyfile="fn/core/audio/Audio.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_audio_1a756d110fddb3c4b23c9310e532ef57df" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Audio::loadAudio</definition>
        <argsstring>(const fs::path &amp;audiopath)</argsstring>
        <name>loadAudio</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>audiopath</declname>
        </param>
        <briefdescription>
<para>Esegue il caricamento del file audio. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/audio/Audio.hpp" line="61" column="6" bodyfile="fn/core/audio/Audio.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gestisce la gestione e caricamento dei file audio. </para>
    </briefdescription>
    <detaileddescription>
<para>La classe <ref refid="class_audio" kindref="compound">Audio</ref> basa il suo funzionamento su <ulink url="https://www.ambiera.com/irrklang/">irrKlang</ulink> un sound engine e libreria audio che consente di caricare e eseguire numerosissimi file audio ad alta risoluzione sia in 2D che 3D. </para>
    </detaileddescription>
    <location file="fn/core/audio/Audio.hpp" line="21" column="1" bodyfile="fn/core/audio/Audio.hpp" bodystart="22" bodyend="65"/>
    <listofallmembers>
      <member refid="class_audio_1aaa7dc59abf0f316e547c8e11cd248c74" prot="public" virt="non-virtual"><scope>Audio</scope><name>Audio</name></member>
      <member refid="class_audio_1ad08fe313df6976ffbfc28d8ced87e317" prot="public" virt="non-virtual"><scope>Audio</scope><name>Audio</name></member>
      <member refid="class_audio_1a756d110fddb3c4b23c9310e532ef57df" prot="protected" virt="non-virtual"><scope>Audio</scope><name>loadAudio</name></member>
      <member refid="class_audio_1a75d17eeb7a17d4e06dd2fb154d75d70d" prot="private" virt="non-virtual"><scope>Audio</scope><name>m_soundSource</name></member>
      <member refid="class_audio_1a2466cb9a711a4baafe8bbbcd1443d638" prot="public" virt="non-virtual"><scope>Audio</scope><name>operator=</name></member>
      <member refid="class_audio_1ad0ed2dab77abc29e16bbf80204d5e9d9" prot="public" virt="non-virtual"><scope>Audio</scope><name>play2D</name></member>
      <member refid="class_audio_1af3ab2a8f4cb7340b2854c883f87e0a03" prot="public" virt="non-virtual"><scope>Audio</scope><name>play3D</name></member>
      <member refid="class_audio_1a3abea10e2ff20879c090bc579beea59e" prot="protected" virt="non-virtual"><scope>Audio</scope><name>s_audio_engine</name></member>
      <member refid="class_audio_1abedaa8736b238622c9ba1e41407926d8" prot="public" virt="non-virtual"><scope>Audio</scope><name>stopAllSounds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
