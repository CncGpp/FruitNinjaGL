<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_texture" kind="class" language="C++" prot="public">
    <compoundname>Texture</compoundname>
    <includes refid="_texture_8hpp" local="no">fn/core/gl/Texture.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4d" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>Type</name>
        <enumvalue id="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4daa2b8f01051e9b67acd6050985ce2422f" prot="public">
          <name>diffuse</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4daaac994eab3caf54080fc65d8143a7843" prot="public">
          <name>specular</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4da5c940de9c166a32dc1f63d9dafc6822f" prot="public">
          <name>unknow</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tipi di texture supportate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="23" column="1" bodyfile="fn/core/gl/Texture.hpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="typedef" id="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" prot="public" static="no">
        <type>std::unordered_map&lt; GLint, GLint &gt;</type>
        <definition>using Texture::Parameteri =  std::unordered_map&lt;GLint, GLint&gt;</definition>
        <argsstring></argsstring>
        <name>Parameteri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="20" column="1" bodyfile="fn/core/gl/Texture.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_texture_1acc091a7a07abe75c263544eaeec44664" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Texture::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
<para>Identificativo della texture restituito dopo il bind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="66" column="8" bodyfile="fn/core/gl/Texture.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_texture_1ade732ec88aeabecbdd80aab8695f22f8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Texture::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
<para>Tipologia della texture (&apos;texture_diffuse&apos; o &apos;texture_specular&apos;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="67" column="13" bodyfile="fn/core/gl/Texture.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_texture_1a981f54bcde997dd3119c5575a77c4bb2" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path Texture::m_path</definition>
        <argsstring></argsstring>
        <name>m_path</name>
        <briefdescription>
<para>Path alla texture sul disco. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="68" column="10" bodyfile="fn/core/gl/Texture.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_texture_1af481acfa0145beff91b45d0bd1cbe3ed" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Texture::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="69" column="5" bodyfile="fn/core/gl/Texture.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_texture_1a308919fb8790c1b0867a2a509085803e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Texture::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="69" column="13" bodyfile="fn/core/gl/Texture.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_texture_1abb060a4d7230b817802e31c8839aa785" prot="private" static="no" mutable="no">
        <type><ref refid="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" kindref="member">Texture::Parameteri</ref></type>
        <definition>Texture::Parameteri Texture::m_parameteri</definition>
        <argsstring></argsstring>
        <name>m_parameteri</name>
        <initializer>= {
		{ GL_TEXTURE_WRAP_S, GL_REPEAT },
		{ GL_TEXTURE_WRAP_T, GL_REPEAT },
		{ GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR },
		{ GL_TEXTURE_MAG_FILTER, GL_LINEAR },
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="70" column="21" bodyfile="fn/core/gl/Texture.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_texture_1ab2ba009ad50bb75df998140ca36fd845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Texture::Texture</definition>
        <argsstring>(const fs::path &amp;texpath, const Texture::Type type=Texture::Type::diffuse, const Texture::Parameteri &amp;parameteri={})</argsstring>
        <name>Texture</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>texpath</declname>
        </param>
        <param>
          <type>const <ref refid="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4d" kindref="member">Texture::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4daa2b8f01051e9b67acd6050985ce2422f" kindref="member">Texture::Type::diffuse</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" kindref="member">Texture::Parameteri</ref> &amp;</type>
          <declname>parameteri</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Costruttore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texpath</parametername>
</parameternamelist>
<parameterdescription>
<para>percorso alla texture da caricare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>tipologia della texture. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameteri</parametername>
</parameternamelist>
<parameterdescription>
<para>dizionario di parametri (key, value) che specifica le opzioni OpenGL legate a quella texture. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="34" column="1" bodyfile="fn/core/gl/Texture.cpp" bodystart="4" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1ab428d9397d27cb0d7621fc3df2fe328b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Texture::Texture</definition>
        <argsstring>(const fs::path &amp;texpath, const Texture::Parameteri &amp;parameteri)</argsstring>
        <name>Texture</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>texpath</declname>
        </param>
        <param>
          <type>const <ref refid="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" kindref="member">Texture::Parameteri</ref> &amp;</type>
          <declname>parameteri</declname>
        </param>
        <briefdescription>
<para>Costruttore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texpath</parametername>
</parameternamelist>
<parameterdescription>
<para>percorso alla texture da caricare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameteri</parametername>
</parameternamelist>
<parameterdescription>
<para>dizionario di parametri (key, value) che specifica le opzioni OpenGL legate a quella texture. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="42" column="1" bodyfile="fn/core/gl/Texture.cpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1a09c4bcb7462f64c1d20fa69dba3cee8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Texture::~Texture</definition>
        <argsstring>()</argsstring>
        <name>~Texture</name>
        <briefdescription>
<para>Distruttore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="45" column="1" bodyfile="fn/core/gl/Texture.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1afa26eda2a091a95e96e67a6b4f98484f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Texture::Texture</definition>
        <argsstring>(Texture const &amp;)=delete</argsstring>
        <name>Texture</name>
        <param>
          <type><ref refid="class_texture" kindref="compound">Texture</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>La copia di un oggetto <ref refid="class_texture" kindref="compound">Texture</ref> non è permessa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1a02f96ca28b4b433e762876d8a85a7c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_texture" kindref="compound">Texture</ref> &amp;</type>
        <definition>Texture&amp; Texture::operator=</definition>
        <argsstring>(Texture const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_texture" kindref="compound">Texture</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>L&apos;assegnazione di un oggetto <ref refid="class_texture" kindref="compound">Texture</ref> non è permessa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="51" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1aac68d4302b5341f46876b977b794d6bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint Texture::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>id della texture come restituito da OpenGL </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="53" column="9" bodyfile="fn/core/gl/Texture.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1a70f1967dbfff2ffd00fba3d56a00cd75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Texture::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>tipologia della texture in formato stringa </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="54" column="14" bodyfile="fn/core/gl/Texture.hpp" bodystart="54" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1afe8ec25b0998b6382cd15653b71a0125" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>glm::vec2</type>
        <definition>glm::vec2 Texture::shape</definition>
        <argsstring>() const</argsstring>
        <name>shape</name>
        <briefdescription>
<para>shape della texture </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="55" column="12" bodyfile="fn/core/gl/Texture.hpp" bodystart="55" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1a28a320fab9e4bdedb5f0a41a921a111f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Texture::shape</definition>
        <argsstring>(int *width, int *height) const</argsstring>
        <name>shape</name>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>shape della texture tramite puntatori </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="56" column="6" bodyfile="fn/core/gl/Texture.hpp" bodystart="56" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1ac27ba14a830bb5f1d1343e986d83dbf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const fs::path &amp;</type>
        <definition>const fs::path&amp; Texture::filepath</definition>
        <argsstring>() const</argsstring>
        <name>filepath</name>
        <briefdescription>
<para>filepath originale della texture </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="57" column="17" bodyfile="fn/core/gl/Texture.hpp" bodystart="57" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_texture_1a8bc7ac447f096902901466205c245bf9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" kindref="member">Texture::Parameteri</ref> &amp;</type>
        <definition>const Texture::Parameteri&amp; Texture::parameteri</definition>
        <argsstring>() const</argsstring>
        <name>parameteri</name>
        <briefdescription>
<para>dizionario dei parametri </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="58" column="28" bodyfile="fn/core/gl/Texture.hpp" bodystart="58" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_texture_1ad3a36458f5ccd281b964ad1b2b4f92db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Texture::load</definition>
        <argsstring>()</argsstring>
        <name>load</name>
        <briefdescription>
<para>Funzione principale per il load della texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/gl/Texture.hpp" line="63" column="6" bodyfile="fn/core/gl/Texture.cpp" bodystart="36" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Astrazione del concetto di texture. </para>
    </briefdescription>
    <detaileddescription>
<para>La classe consente di costruire e caricare una texture dato un percorso. è anche possibile specificare il tipo di texture nonché i parametri OpenGl.</para>
<para>Il loading dell&apos;immagine avviene usando la libreria stb_image. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::unordered_map&lt; GLint, GLint &gt;</label>
      </node>
      <node id="4">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1">
        <label>Texture</label>
        <link refid="class_texture"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_parameteri</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_type</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="fn/core/gl/Texture.hpp" line="18" column="1" bodyfile="fn/core/gl/Texture.hpp" bodystart="18" bodyend="76"/>
    <listofallmembers>
      <member refid="class_texture_1ac27ba14a830bb5f1d1343e986d83dbf7" prot="public" virt="non-virtual"><scope>Texture</scope><name>filepath</name></member>
      <member refid="class_texture_1aac68d4302b5341f46876b977b794d6bf" prot="public" virt="non-virtual"><scope>Texture</scope><name>id</name></member>
      <member refid="class_texture_1ad3a36458f5ccd281b964ad1b2b4f92db" prot="protected" virt="non-virtual"><scope>Texture</scope><name>load</name></member>
      <member refid="class_texture_1a308919fb8790c1b0867a2a509085803e" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_height</name></member>
      <member refid="class_texture_1acc091a7a07abe75c263544eaeec44664" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_id</name></member>
      <member refid="class_texture_1abb060a4d7230b817802e31c8839aa785" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_parameteri</name></member>
      <member refid="class_texture_1a981f54bcde997dd3119c5575a77c4bb2" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_path</name></member>
      <member refid="class_texture_1ade732ec88aeabecbdd80aab8695f22f8" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_type</name></member>
      <member refid="class_texture_1af481acfa0145beff91b45d0bd1cbe3ed" prot="private" virt="non-virtual"><scope>Texture</scope><name>m_width</name></member>
      <member refid="class_texture_1a02f96ca28b4b433e762876d8a85a7c33" prot="public" virt="non-virtual"><scope>Texture</scope><name>operator=</name></member>
      <member refid="class_texture_1ae00167b5972648204c51a6b6a5bf5cbe" prot="public" virt="non-virtual"><scope>Texture</scope><name>Parameteri</name></member>
      <member refid="class_texture_1a8bc7ac447f096902901466205c245bf9" prot="public" virt="non-virtual"><scope>Texture</scope><name>parameteri</name></member>
      <member refid="class_texture_1afe8ec25b0998b6382cd15653b71a0125" prot="public" virt="non-virtual"><scope>Texture</scope><name>shape</name></member>
      <member refid="class_texture_1a28a320fab9e4bdedb5f0a41a921a111f" prot="public" virt="non-virtual"><scope>Texture</scope><name>shape</name></member>
      <member refid="class_texture_1ab2ba009ad50bb75df998140ca36fd845" prot="public" virt="non-virtual"><scope>Texture</scope><name>Texture</name></member>
      <member refid="class_texture_1ab428d9397d27cb0d7621fc3df2fe328b" prot="public" virt="non-virtual"><scope>Texture</scope><name>Texture</name></member>
      <member refid="class_texture_1afa26eda2a091a95e96e67a6b4f98484f" prot="public" virt="non-virtual"><scope>Texture</scope><name>Texture</name></member>
      <member refid="class_texture_1a99e7586e0f593eb5b1588d85cf2c0c4d" prot="public" virt="non-virtual"><scope>Texture</scope><name>Type</name></member>
      <member refid="class_texture_1a70f1967dbfff2ffd00fba3d56a00cd75" prot="public" virt="non-virtual"><scope>Texture</scope><name>type</name></member>
      <member refid="class_texture_1a09c4bcb7462f64c1d20fa69dba3cee8a" prot="public" virt="non-virtual"><scope>Texture</scope><name>~Texture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
