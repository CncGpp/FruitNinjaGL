<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classfn_1_1log" kind="class" language="C++" prot="public">
    <compoundname>fn::log</compoundname>
    <includes refid="log_8hpp" local="no">utl/log.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0" prot="public" static="no" strong="yes">
        <type>unsigned int</type>
        <name>level</name>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0a3262d48df5d75e3452f0f16b313b7808" prot="public">
          <name>off</name>
          <initializer>=    0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0adf6402fd9ecc60f5a2159fdf45711cd4" prot="public">
          <name>fatal</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0acb5e100e5a9a3e7f6d1fd97512215282" prot="public">
          <name>error</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0a1ea4c3ab05ee0c6d4de30740443769cb" prot="public">
          <name>warn</name>
          <initializer>=   4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0acaf9b6b99962bf5c2264824231d7a40c" prot="public">
          <name>info</name>
          <initializer>=   8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0aad42f6697b035b7580e4fef93be20b4d" prot="public">
          <name>debug</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0a04a75036e9d520bb983c5ed03b8d0182" prot="public">
          <name>trace</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0aa181a603769c1f98ad927e7367c7aa51" prot="public">
          <name>all</name>
          <initializer>=   64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="10" column="1" bodyfile="utl/log.hpp" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="typedef" id="classfn_1_1log_1a9a4c27daa597a07b311815d56ab8d6f9" prot="public" static="no">
        <type>unsigned int</type>
        <definition>using fn::log::mask =  unsigned int</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="22" column="1" bodyfile="utl/log.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classfn_1_1log_1a79017ce19b5e3553c557230810782793" prot="private" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string fn::log::s_datetime_fmt</definition>
        <argsstring></argsstring>
        <name>s_datetime_fmt</name>
        <initializer>= &quot;[{:%Y-%m-%d %H:%M:%S}] &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="61" column="33" bodyfile="utl/log.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1log_1a52bb0df3d693f11ef2dcd1bfb24043a1" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0" kindref="member">level</ref></type>
        <definition>constexpr level fn::log::s_logging_level</definition>
        <argsstring></argsstring>
        <name>s_logging_level</name>
        <initializer>= <ref refid="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0aa181a603769c1f98ad927e7367c7aa51" kindref="member">level::all</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="62" column="31" bodyfile="utl/log.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1log_1a7512e76f2ecbb0e13e24ec2328abf8e7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="classfn_1_1log_1a9a4c27daa597a07b311815d56ab8d6f9" kindref="member">mask</ref></type>
        <definition>constexpr mask fn::log::s_logging_mask</definition>
        <argsstring></argsstring>
        <name>s_logging_mask</name>
        <initializer>= 0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="63" column="30" bodyfile="utl/log.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfn_1_1log_1a57a9cf745396085f44c0790dece29dbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0" kindref="member">level</ref></type>
            <declname>l</declname>
            <defname>l</defname>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void fn::log::base_logging</definition>
        <argsstring>(fmt::text_style style, const std::string &amp;S, Args ...args)</argsstring>
        <name>base_logging</name>
        <param>
          <type>fmt::text_style</type>
          <declname>style</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="25" column="13" bodyfile="utl/log.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1log_1a0d41899fe7e018b694253a23b63fb0de" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void fn::log::fatal</definition>
        <argsstring>(const std::string &amp;S, Args ...args)</argsstring>
        <name>fatal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="33" column="23" bodyfile="utl/log.hpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1log_1a10ab53ffb74ccf67a1d091b07297c223" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void fn::log::error</definition>
        <argsstring>(const std::string &amp;S, Args ...args)</argsstring>
        <name>error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="41" column="23" bodyfile="utl/log.hpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1log_1aa2fe8c3cc973cd56023b7e71c63a0c24" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void fn::log::warn</definition>
        <argsstring>(const std::string &amp;S, Args ...args)</argsstring>
        <name>warn</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="46" column="23" bodyfile="utl/log.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1log_1af82f039e92179f185fbd364676b08b0a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void fn::log::info</definition>
        <argsstring>(const std::string &amp;S, Args ...args)</argsstring>
        <name>info</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="51" column="23" bodyfile="utl/log.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1log_1ad9d2b766792ef821390f773c47a25e31" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void fn::log::trace</definition>
        <argsstring>(const std::string &amp;S, Args ...args)</argsstring>
        <name>trace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>Args ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utl/log.hpp" line="56" column="23" bodyfile="utl/log.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility per il log. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="1">
        <label>fn::log</label>
        <link refid="classfn_1_1log"/>
        <childnode refid="2" relation="usage">
          <edgelabel>s_datetime_fmt</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="utl/log.hpp" line="8" column="1" bodyfile="utl/log.hpp" bodystart="8" bodyend="64"/>
    <listofallmembers>
      <member refid="classfn_1_1log_1a57a9cf745396085f44c0790dece29dbf" prot="public" virt="non-virtual"><scope>fn::log</scope><name>base_logging</name></member>
      <member refid="classfn_1_1log_1a10ab53ffb74ccf67a1d091b07297c223" prot="public" virt="non-virtual"><scope>fn::log</scope><name>error</name></member>
      <member refid="classfn_1_1log_1a0d41899fe7e018b694253a23b63fb0de" prot="public" virt="non-virtual"><scope>fn::log</scope><name>fatal</name></member>
      <member refid="classfn_1_1log_1af82f039e92179f185fbd364676b08b0a" prot="public" virt="non-virtual"><scope>fn::log</scope><name>info</name></member>
      <member refid="classfn_1_1log_1ac58643ce6a0b04de300373546fb24ea0" prot="public" virt="non-virtual"><scope>fn::log</scope><name>level</name></member>
      <member refid="classfn_1_1log_1a9a4c27daa597a07b311815d56ab8d6f9" prot="public" virt="non-virtual"><scope>fn::log</scope><name>mask</name></member>
      <member refid="classfn_1_1log_1a79017ce19b5e3553c557230810782793" prot="private" virt="non-virtual"><scope>fn::log</scope><name>s_datetime_fmt</name></member>
      <member refid="classfn_1_1log_1a52bb0df3d693f11ef2dcd1bfb24043a1" prot="private" virt="non-virtual"><scope>fn::log</scope><name>s_logging_level</name></member>
      <member refid="classfn_1_1log_1a7512e76f2ecbb0e13e24ec2328abf8e7" prot="private" virt="non-virtual"><scope>fn::log</scope><name>s_logging_mask</name></member>
      <member refid="classfn_1_1log_1ad9d2b766792ef821390f773c47a25e31" prot="public" virt="non-virtual"><scope>fn::log</scope><name>trace</name></member>
      <member refid="classfn_1_1log_1aa2fe8c3cc973cd56023b7e71c63a0c24" prot="public" virt="non-virtual"><scope>fn::log</scope><name>warn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
