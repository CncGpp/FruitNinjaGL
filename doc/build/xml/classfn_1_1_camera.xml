<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classfn_1_1_camera" kind="class" language="C++" prot="public">
    <compoundname>fn::Camera</compoundname>
    <includes refid="_camera_8hpp" local="no">fn/core/Camera.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classfn_1_1_camera_1aa1ad3d0860b0a48c5230c3f5713903d7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float fn::Camera::fovy</definition>
        <argsstring></argsstring>
        <name>fovy</name>
        <initializer>= 45.0</initializer>
        <briefdescription>
<para>Valore, in gradi del field of view della proiezione rispetto l&apos;asse y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="21" column="31" bodyfile="fn/core/Camera.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1a420012e0144bd293bbe9ee60c01ff13f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float fn::Camera::aspect</definition>
        <argsstring></argsstring>
        <name>aspect</name>
        <initializer>= 16.0f / 9.0f</initializer>
        <briefdescription>
<para>Aspect ratio della proiezione. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="22" column="31" bodyfile="fn/core/Camera.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1aa42a0dfd794bf469d9acd9a0c4a62b62" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float fn::Camera::zNear</definition>
        <argsstring></argsstring>
        <name>zNear</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
<para>zNear della proiezione </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="23" column="31" bodyfile="fn/core/Camera.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1aa8f9826467e1c740b91aab995b77828e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float fn::Camera::zFar</definition>
        <argsstring></argsstring>
        <name>zFar</name>
        <initializer>= 150.0f</initializer>
        <briefdescription>
<para>zFar della proiezione </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="24" column="31" bodyfile="fn/core/Camera.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classfn_1_1_camera_1a98a59f206662e3cba6f0a812e4b3c2a6" prot="protected" static="no" mutable="no">
        <type>const glm::vec3</type>
        <definition>const glm::vec3 fn::Camera::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <initializer>= glm::vec3(0.0f, 0.0f, -1.0f)</initializer>
        <briefdescription>
<para>Punto nello spazio dove la camera deve guardare (equivale al front) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="46" column="17" bodyfile="fn/core/Camera.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1abaef6686b5f323d5c4ed2447f99d5816" prot="protected" static="no" mutable="no">
        <type>const glm::vec3</type>
        <definition>const glm::vec3 fn::Camera::m_up</definition>
        <argsstring></argsstring>
        <name>m_up</name>
        <initializer>= glm::vec3(0.0f, 1.0f, 0.0f)</initializer>
        <briefdescription>
<para>Versore al up della camera, serve a definire l&apos;asse y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="47" column="17" bodyfile="fn/core/Camera.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1a6b3cb19698a7216763b4b7a552d5669d" prot="protected" static="no" mutable="no">
        <type>glm::vec3</type>
        <definition>glm::vec3 fn::Camera::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <briefdescription>
<para>Punto nello spazio dove la camera è posizionata (equivale all&apos;eye) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="48" column="11" bodyfile="fn/core/Camera.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1a3a2148b5096137cab00aafe1363c52e2" prot="protected" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 fn::Camera::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <briefdescription>
<para>Matrice che definisce la proiezione prospettica. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="49" column="11" bodyfile="fn/core/Camera.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfn_1_1_camera_1a5d4ca28d45898d4c16a6db9c9c350710" prot="protected" static="no" mutable="no">
        <type>glm::mat4</type>
        <definition>glm::mat4 fn::Camera::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <briefdescription>
<para>Matrice che definisce la trasformazione di vista. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="50" column="11" bodyfile="fn/core/Camera.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfn_1_1_camera_1a73b95762bed297f4a7a46691db192b4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fn::Camera::Camera</definition>
        <argsstring>(glm::vec3 position=glm::vec3(0.0f, 0.0f, 20.0f))</argsstring>
        <name>Camera</name>
        <param>
          <type>glm::vec3</type>
          <declname>position</declname>
          <defval>glm::vec3(0.0f, 0.0f, 20.0f)</defval>
        </param>
        <briefdescription>
<para>Costruisce la camera. </para>
        </briefdescription>
        <detaileddescription>
<para>Durante la costruzione della camera vengono calcolate m_projection e m_view, tali matrici non saranno più modificate. <emphasis>NOTE</emphasis> La camera punterà sempre verso {0,0,-1} con up {0,1,0} <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>posizione nello spazio dove collocare la camera. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="34" column="1" bodyfile="fn/core/Camera.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1_camera_1a209972dff79514be449d2a6fa96ee2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual fn::Camera::~Camera</definition>
        <argsstring>()=default</argsstring>
        <name>~Camera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="39" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1_camera_1a0b1d0fd45d1f30c7b642000fe1ecaed1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::vec3 &amp;</type>
        <definition>const glm::vec3&amp; fn::Camera::position</definition>
        <argsstring>() const</argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="41" column="18" bodyfile="fn/core/Camera.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1_camera_1af6cbd04bd446aa5f6461dafcb0429ec2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::mat4 &amp;</type>
        <definition>const glm::mat4&amp; fn::Camera::projection</definition>
        <argsstring>() const</argsstring>
        <name>projection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="42" column="18" bodyfile="fn/core/Camera.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classfn_1_1_camera_1af2121773064e581642656c1d921d596b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const glm::mat4 &amp;</type>
        <definition>const glm::mat4&amp; fn::Camera::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/Camera.hpp" line="43" column="18" bodyfile="fn/core/Camera.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classfn_1_1_camera" kindref="compound">Camera</ref> di gioco. </para>
    </briefdescription>
    <detaileddescription>
<para>Classe che astrae il concetto di &apos;<ref refid="classfn_1_1_camera" kindref="compound">Camera</ref>&apos; definendo:<itemizedlist>
<listitem><para>projection matrix: proiezione prospettica</para>
</listitem><listitem><para>view matrix: calcolata a patrie dalla posizione della camera</para>
</listitem></itemizedlist>
</para>
<para>Tutti i parametri della camera come fovy, aspect, zNear, zFar </para>
    </detaileddescription>
    <location file="fn/core/Camera.hpp" line="19" column="1" bodyfile="fn/core/Camera.hpp" bodystart="19" bodyend="51"/>
    <listofallmembers>
      <member refid="classfn_1_1_camera_1a420012e0144bd293bbe9ee60c01ff13f" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>aspect</name></member>
      <member refid="classfn_1_1_camera_1a73b95762bed297f4a7a46691db192b4c" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>Camera</name></member>
      <member refid="classfn_1_1_camera_1aa1ad3d0860b0a48c5230c3f5713903d7" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>fovy</name></member>
      <member refid="classfn_1_1_camera_1a98a59f206662e3cba6f0a812e4b3c2a6" prot="protected" virt="non-virtual"><scope>fn::Camera</scope><name>m_center</name></member>
      <member refid="classfn_1_1_camera_1a6b3cb19698a7216763b4b7a552d5669d" prot="protected" virt="non-virtual"><scope>fn::Camera</scope><name>m_position</name></member>
      <member refid="classfn_1_1_camera_1a3a2148b5096137cab00aafe1363c52e2" prot="protected" virt="non-virtual"><scope>fn::Camera</scope><name>m_projection</name></member>
      <member refid="classfn_1_1_camera_1abaef6686b5f323d5c4ed2447f99d5816" prot="protected" virt="non-virtual"><scope>fn::Camera</scope><name>m_up</name></member>
      <member refid="classfn_1_1_camera_1a5d4ca28d45898d4c16a6db9c9c350710" prot="protected" virt="non-virtual"><scope>fn::Camera</scope><name>m_view</name></member>
      <member refid="classfn_1_1_camera_1a0b1d0fd45d1f30c7b642000fe1ecaed1" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>position</name></member>
      <member refid="classfn_1_1_camera_1af6cbd04bd446aa5f6461dafcb0429ec2" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>projection</name></member>
      <member refid="classfn_1_1_camera_1af2121773064e581642656c1d921d596b" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>view</name></member>
      <member refid="classfn_1_1_camera_1aa8f9826467e1c740b91aab995b77828e" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>zFar</name></member>
      <member refid="classfn_1_1_camera_1aa42a0dfd794bf469d9acd9a0c4a62b62" prot="public" virt="non-virtual"><scope>fn::Camera</scope><name>zNear</name></member>
      <member refid="classfn_1_1_camera_1a209972dff79514be449d2a6fa96ee2ad" prot="public" virt="virtual"><scope>fn::Camera</scope><name>~Camera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
