<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_event" kind="class" language="C++" prot="public">
    <compoundname>Event</compoundname>
    <derivedcompoundref refid="struct_blitz_event" prot="public" virt="non-virtual">BlitzEvent</derivedcompoundref>
    <derivedcompoundref refid="struct_combo_event" prot="public" virt="non-virtual">ComboEvent</derivedcompoundref>
    <includes refid="_event_8hpp" local="no">fn/engine/events/Event.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_event_1a2abf13b5be49315e9e362af02029f058" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="class_event_1a2abf13b5be49315e9e362af02029f058a826161113e102ae124685a080fd7426f" prot="public">
          <name>BLADE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_event_1a2abf13b5be49315e9e362af02029f058a913bcc607ae0d97776698d9ed424be6a" prot="public">
          <name>SPLIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_event_1a2abf13b5be49315e9e362af02029f058aa2516d5f167277f017fd39de97d82603" prot="public">
          <name>COMBO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_event_1a2abf13b5be49315e9e362af02029f058a5da9045e00cb5c039a4a8149adb10f93" prot="public">
          <name>BLITZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="6" column="1" bodyfile="fn/engine/events/Event.hpp" bodystart="6" bodyend="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_event_1a92943c032c5e61d6a7df8746e4e5bd2e" prot="private" static="no" mutable="no">
        <type><ref refid="class_event_1a2abf13b5be49315e9e362af02029f058" kindref="member">Event::Type</ref></type>
        <definition>Event::Type Event::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="22" column="13" bodyfile="fn/engine/events/Event.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_event_1ab0207929419b890fd91f24ab65b9e47b" prot="private" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; Event::m_lambda</definition>
        <argsstring></argsstring>
        <name>m_lambda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="23" column="15" bodyfile="fn/engine/events/Event.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_event_1a0672d28ca12a8b1dbec15e9e4d82d262" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(Event::Type type)</argsstring>
        <name>Event</name>
        <param>
          <type><ref refid="class_event_1a2abf13b5be49315e9e362af02029f058" kindref="member">Event::Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="13" column="1" bodyfile="fn/engine/events/Event.hpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a7cc8a4019bf21dc23d86964e09533cf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(Event::Type type, std::function&lt; void()&gt; lambda)</argsstring>
        <name>Event</name>
        <param>
          <type><ref refid="class_event_1a2abf13b5be49315e9e362af02029f058" kindref="member">Event::Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="14" column="1" bodyfile="fn/engine/events/Event.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1acd61b47197f452e722ece7118ff9045b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Event::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="15" column="14" bodyfile="fn/engine/events/Event.hpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a1921b92a427536430608540a5f8f39c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_event_1a2abf13b5be49315e9e362af02029f058" kindref="member">Event::Type</ref></type>
        <definition>virtual Event::Type Event::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/engine/events/Event.hpp" line="19" column="21" bodyfile="fn/engine/events/Event.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Event</label>
        <link refid="class_event"/>
      </node>
      <node id="3">
        <label>ComboEvent</label>
        <link refid="struct_combo_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BlitzEvent</label>
        <link refid="struct_blitz_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="fn/engine/events/Event.hpp" line="4" column="1" bodyfile="fn/engine/events/Event.hpp" bodystart="4" bodyend="24"/>
    <listofallmembers>
      <member refid="class_event_1a0672d28ca12a8b1dbec15e9e4d82d262" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a7cc8a4019bf21dc23d86964e09533cf6" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1acd61b47197f452e722ece7118ff9045b" prot="public" virt="virtual"><scope>Event</scope><name>execute</name></member>
      <member refid="class_event_1ab0207929419b890fd91f24ab65b9e47b" prot="private" virt="non-virtual"><scope>Event</scope><name>m_lambda</name></member>
      <member refid="class_event_1a92943c032c5e61d6a7df8746e4e5bd2e" prot="private" virt="non-virtual"><scope>Event</scope><name>m_type</name></member>
      <member refid="class_event_1a2abf13b5be49315e9e362af02029f058" prot="public" virt="non-virtual"><scope>Event</scope><name>Type</name></member>
      <member refid="class_event_1a1921b92a427536430608540a5f8f39c2" prot="public" virt="virtual"><scope>Event</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
