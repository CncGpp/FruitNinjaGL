<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="namespacecore" kind="namespace" language="C++">
    <compoundname>core</compoundname>
    <innernamespace refid="namespacecore_1_1gl">core::gl</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacecore_1af38b4a9ca1ad3ce8caaff19a2bf5398a" prot="public" static="no">
        <type>std::chrono::duration&lt; double &gt;</type>
        <definition>using core::seconds = typedef std::chrono::duration&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/core.hpp" line="40" column="1" bodyfile="fn/core/core.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecore_1ae301e132e113d6f8daeba7f1649529d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void core::GLDebugMessageCallback</definition>
        <argsstring>(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *msg, const void *data)</argsstring>
        <name>GLDebugMessageCallback</name>
        <param>
          <type>GLenum</type>
          <declname>source</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>severity</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const GLchar *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Callback di debug OpenGL. </para>
        </briefdescription>
        <detaileddescription>
<para>La funzione è richiamata automaticamente da OpenGL ogni qualvolta si verifica un evento di debug. Mostrando sullo stderr Sorgente, tipo, gravità non che il contenuto dell&apos;evento. Tale evento non sempre è un errore ma può essere un messaggio, un hint o un&apos;informazione.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>severity</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://gist.github.com/liam-middlebrook/c52b069e4be2d87a6d2f">https://gist.github.com/liam-middlebrook/c52b069e4be2d87a6d2f</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/error_check.hpp" line="28" column="17" bodyfile="fn/core/error_check.hpp" bodystart="28" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespacecore_1ac06af00cba0cf247c1728aa4f7d71a73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void core::GL_CLEAR_ERROR</definition>
        <argsstring>()</argsstring>
        <name>GL_CLEAR_ERROR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/error_check.hpp" line="130" column="17" bodyfile="fn/core/error_check.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespacecore_1a3fbbc57bec0972ddf5cacda96972a99d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool core::GL_ERROR_CHECK</definition>
        <argsstring>(const char *stmt, const char *file, int line)</argsstring>
        <name>GL_ERROR_CHECK</name>
        <param>
          <type>const char *</type>
          <declname>stmt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/error_check.hpp" line="133" column="17" bodyfile="fn/core/error_check.hpp" bodystart="133" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Namespace per le funzioni core. </para>
    </detaileddescription>
    <location file="fn/core/core.hpp" line="39" column="1"/>
  </compounddef>
</doxygen>
