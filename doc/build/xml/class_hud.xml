<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="class_hud" kind="class" language="C++" prot="public">
    <compoundname>Hud</compoundname>
    <basecompoundref refid="class_g_u_i" prot="public" virt="non-virtual">GUI</basecompoundref>
    <includes refid="_hud_8hpp" local="no">fn/core/GUI/Hud.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hud_1a91b87bdae93734526fc68d0e5e194506" prot="private" static="no" mutable="no">
        <type><ref refid="_sprite_8hpp_1a8e69bf3c9c9bf7bfb79c2d34468fefee" kindref="member">SpriteSP</ref></type>
        <definition>SpriteSP Hud::m_score_icon</definition>
        <argsstring></argsstring>
        <name>m_score_icon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="35" column="10" bodyfile="fn/core/GUI/Hud.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hud_1af442f46bb7177c6bc3a8d0d122d1b9bf" prot="private" static="no" mutable="no">
        <type><ref refid="core_8hpp_1a54a6b1a39c5da4a208009a3652699df4" kindref="member">sp</ref>&lt; <ref refid="class_text" kindref="compound">Text</ref> &gt;</type>
        <definition>sp&lt;Text&gt; Hud::m_score_text</definition>
        <argsstring></argsstring>
        <name>m_score_text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="37" column="4" bodyfile="fn/core/GUI/Hud.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hud_1a4f1dc36544a8085e914dee2cd03e8a75" prot="private" static="no" mutable="no">
        <type><ref refid="core_8hpp_1a54a6b1a39c5da4a208009a3652699df4" kindref="member">sp</ref>&lt; <ref refid="class_text" kindref="compound">Text</ref> &gt;</type>
        <definition>sp&lt;Text&gt; Hud::m_timer_text</definition>
        <argsstring></argsstring>
        <name>m_timer_text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="38" column="4" bodyfile="fn/core/GUI/Hud.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hud_1ad367d9f8d5947cd6b150658f4a7011c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hud::Hud</definition>
        <argsstring>()</argsstring>
        <name>Hud</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="16" column="1" bodyfile="fn/core/GUI/Hud.cpp" bodystart="3" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_hud_1a3d93a9a33892b323b7930634b5c50789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hud::setScore</definition>
        <argsstring>(const unsigned int score)</argsstring>
        <name>setScore</name>
        <param>
          <type>const unsigned int</type>
          <declname>score</declname>
        </param>
        <briefdescription>
<para>Setta il punteggio attuale nell&apos;hud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>score</parametername>
</parameternamelist>
<parameterdescription>
<para>punteggio da mostrare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="22" column="6" bodyfile="fn/core/GUI/Hud.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_hud_1ae4a124c055e7c24b05742361b2609d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hud::setTimer</definition>
        <argsstring>(const core::seconds time)</argsstring>
        <name>setTimer</name>
        <param>
          <type>const <ref refid="namespacecore_1af38b4a9ca1ad3ce8caaff19a2bf5398a" kindref="member">core::seconds</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Setta il tempo restante nell&apos;hud. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>tempo da mostrare </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="29" column="6" bodyfile="fn/core/GUI/Hud.cpp" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_hud_1a99c8e88f2045a899bc70f263fb7730ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hud::draw</definition>
        <argsstring>(const fn::Camera &amp;camera) override</argsstring>
        <name>draw</name>
        <reimplements refid="class_g_u_i_1a07ca795505a1a1d17fa74889b406a236">draw</reimplements>
        <param>
          <type>const <ref refid="classfn_1_1_camera" kindref="compound">fn::Camera</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disegna il componente.</para>
<para>Utilizza lo <ref refid="class_shader" kindref="compound">Shader</ref> di default del componente per disegnarlo. Attivazione e set delle uniform sono gestite da questa funzione.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>Camera rispetto la quale disegnare lo sprite.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_sprite" kindref="compound">Sprite</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="31" column="6" bodyfile="fn/core/GUI/Hud.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_hud_1a03b89499f816e51c16e4175484b380ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hud::onResize</definition>
        <argsstring>() override</argsstring>
        <name>onResize</name>
        <reimplements refid="class_g_u_i_1a2d7329dd55c15d08a167e07e8650e0a1">onResize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="32" column="6" bodyfile="fn/core/GUI/Hud.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hud_1a2837b9501e7858b641c0ec20b710ff24" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>glm::vec3</type>
        <definition>glm::vec3 Hud::position</definition>
        <argsstring>() override</argsstring>
        <name>position</name>
        <reimplements refid="class_g_u_i_1a423f39e95fa43f4cd83a61d7a6530f57">position</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="41" column="19" bodyfile="fn/core/GUI/Hud.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_hud_1ad839a1b92f5102400461e67d459c4f19" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>glm::vec2</type>
        <definition>glm::vec2 Hud::shape</definition>
        <argsstring>() override</argsstring>
        <name>shape</name>
        <reimplements refid="class_g_u_i_1a113bddd89b43d3169efbf511ead5f358">shape</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="fn/core/GUI/Hud.hpp" line="42" column="19" bodyfile="fn/core/GUI/Hud.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classe che gestisce l&apos;hud di gioco. </para>
    </briefdescription>
    <detaileddescription>
<para>Si occupa di disegnare:<itemizedlist>
<listitem><para>Il punteggio (con l&apos;icona a fianco)</para>
</listitem><listitem><para>Il timer del tempo residuo. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Hud</label>
        <link refid="class_hud"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GUI</label>
        <link refid="class_g_u_i"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>std::bitset&lt; Bits &gt;</label>
      </node>
      <node id="3">
        <label>std::shared_ptr&lt; Sprite &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Hud</label>
        <link refid="class_hud"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_score_icon</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>GUI</label>
        <link refid="class_g_u_i"/>
      </node>
      <node id="8">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="4">
        <label>C::Sprite</label>
        <link refid="struct_c_1_1_sprite"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>sprite</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>fn::Component&lt; Sprite &gt;</label>
        <link refid="classfn_1_1_component"/>
        <childnode refid="6" relation="usage">
          <edgelabel>cid</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ctypename</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="fn/core/GUI/Hud.hpp" line="14" column="1" bodyfile="fn/core/GUI/Hud.hpp" bodystart="14" bodyend="43"/>
    <listofallmembers>
      <member refid="class_hud_1a99c8e88f2045a899bc70f263fb7730ff" prot="public" virt="virtual"><scope>Hud</scope><name>draw</name></member>
      <member refid="class_hud_1ad367d9f8d5947cd6b150658f4a7011c4" prot="public" virt="non-virtual"><scope>Hud</scope><name>Hud</name></member>
      <member refid="class_hud_1a91b87bdae93734526fc68d0e5e194506" prot="private" virt="non-virtual"><scope>Hud</scope><name>m_score_icon</name></member>
      <member refid="class_hud_1af442f46bb7177c6bc3a8d0d122d1b9bf" prot="private" virt="non-virtual"><scope>Hud</scope><name>m_score_text</name></member>
      <member refid="class_hud_1a4f1dc36544a8085e914dee2cd03e8a75" prot="private" virt="non-virtual"><scope>Hud</scope><name>m_timer_text</name></member>
      <member refid="class_hud_1a03b89499f816e51c16e4175484b380ea" prot="public" virt="virtual"><scope>Hud</scope><name>onResize</name></member>
      <member refid="class_hud_1a2837b9501e7858b641c0ec20b710ff24" prot="private" virt="virtual"><scope>Hud</scope><name>position</name></member>
      <member refid="class_hud_1a3d93a9a33892b323b7930634b5c50789" prot="public" virt="non-virtual"><scope>Hud</scope><name>setScore</name></member>
      <member refid="class_hud_1ae4a124c055e7c24b05742361b2609d27" prot="public" virt="non-virtual"><scope>Hud</scope><name>setTimer</name></member>
      <member refid="class_hud_1ad839a1b92f5102400461e67d459c4f19" prot="private" virt="virtual"><scope>Hud</scope><name>shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
