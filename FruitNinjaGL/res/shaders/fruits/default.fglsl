#version 330 core
out vec4 FragColor;

in vec2 TexCoords;
in vec3 FragPos;
in vec3 Normal;
in vec3 LightPos;   // posizione luce in wcoord

uniform sampler2D texture_diffuse;

void main()
{
    // Colore della luce, bianco
    vec3 lightColor = vec3(1.0f, 1.0f, 1.0f);

    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    //:::::::::  CALCOLO DELLA LUCE AMBIENTALE                         ::::::::: 
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    float ambientStrength = 0.4;
    vec3 ambient = ambientStrength * lightColor;    
    
    
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    //:::::::::  CALCOLO DELLA LUCE DIFFUSA                            ::::::::: 
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(LightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;
    
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    //:::::::::  CALCOLO DELLA LUCE SPECULARE                          ::::::::: 
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    float specularStrength = 0.3;
    float decay = 32;

    // versore alla visione del viewer, nel  view-space
    // il viewer sta sempre in (0,0,0)
    vec3 viewDir = normalize(-FragPos); 
    vec3 reflectDir = reflect(-lightDir, norm);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), decay);
    vec3 specular = specularStrength * spec * lightColor; 

 
    // Combino i risultati con il colore della texture
    vec3 objectColor = ( texture( texture_diffuse, TexCoords )).xyz;
    vec3 result = (ambient + diffuse + specular) * objectColor;
    //vec3 result = (ambient + diffuse) * objectColor + specular;
    FragColor = vec4(result, 1.0);
}