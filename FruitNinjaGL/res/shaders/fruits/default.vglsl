#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;

out vec3 FragPos;
out vec3 Normal;
out vec3 LightPos;

out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    // Posizione della luce che illumina la scena
    vec3 lightPos = vec3(0.0f, 30.0f, 30.0f);

    gl_Position = projection * view * model * vec4(aPos, 1.0);
    // Calcolo la posizione del fragment
    FragPos = vec3(view * model * vec4(aPos, 1.0));
    // Calcolo le normali
    Normal = mat3(transpose(inverse(view * model))) * aNormal;
    // Coord world -> coord view per la luce
    LightPos = vec3(view * vec4(lightPos, 1.0)); 

    TexCoords = aTexCoords;
}